// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id           String         @id @default(uuid())
  email        String         @unique
  name         String
  password     String
  car          Car[]
  refreshToken RefreshToken[]
  accountToken AccountToken[]
  access       Access[]
  parking      Parking[]

  @@map("accounts")
}

model RefreshToken {
  id        String  @id @default(uuid())
  expiresIn Int
  user      Account @relation(fields: [accountId], references: [id])
  accountId String

  @@map("refresh_tokens")
}

model Car {
  plate        String  @id
  model        String
  manufacturer String
  owner        Account @relation(fields: [ownerId], references: [id])
  ownerId      String

  @@map("cars")
}

model Access {
  id        String   @id @default(uuid())
  date      DateTime
  plate     String
  type      String
  parkingId String
  parking   Parking  @relation(fields: [parkingId], references: [id])
  owner     Account  @relation(fields: [ownerId], references: [id])
  ownerId   String

  @@map("accesses")
}

model AccountToken {
  id        String  @id @default(uuid())
  token     String
  device    String
  accountId String
  account   Account @relation(fields: [accountId], references: [id])

  @@map("account_tokens")
}

model Vacancies {
  id          String  @id @default(uuid())
  title       String  @unique
  description String
  type        String
  situation   String?
  center      Json?
  parkingId   String
  section     Int?
  parking     Parking @relation(fields: [parkingId], references: [id])

  @@map("vacancies")
}

model Parking {
  id       String      @id @default(uuid())
  name     String
  location Json
  ownerId  String
  owner    Account     @relation(fields: [ownerId], references: [id])
  vacancy  Vacancies[]
  Access   Access[]

  @@map("parking")
}
